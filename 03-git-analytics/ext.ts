import fs from 'node:fs';
import path from 'node:path';

const FILE_EXTENSIONS = [
    'asm',
    'brs',
    'c',
    'cc',
    'clj',
    'cljs',
    'cls',
    'coffee',
    'cpp',
    'cr',
    'cs',
    'css',
    'cxx',
    'erl',
    'fs',
    'fsi',
    'fsx',
    'go',
    'groovy',
    'gs',
    'h',
    'handlebars',
    'hbs',
    'hpp',
    'hr',
    'hs',
    'html',
    'htm',
    'hx',
    'hxx',
    'hy',
    'iced',
    'ily',
    'ino',
    'jade',
    'java',
    'jl',
    'js',
    'jsx',
    'mjs',
    'kt',
    'kts',
    'latex',
    'less',
    'ly',
    'lua',
    'ls',
    'ml',
    'mli',
    'mochi',
    'monkey',
    'mustache',
    'nix',
    'nim',
    'nut',
    'php',
    'php5',
    'pl',
    'py',
    'r',
    'rb',
    'rkt',
    'rs',
    'sass',
    'scala',
    'scss',
    'sty',
    'styl',
    'svg',
    'png',
    'sql',
    'swift',
    'tex',
    'ts',
    'tsx',
    'vb',
    'vue',
    'xml',
    'yaml',
    'yml',
    'm',
    'mm',
    'bsl',
    'csv',
    'sh',
    'bash',
    'conf',
    'md',
    'json',
].map((f) => `.${f}`);

export const ext = async (dir: string) => {
    const data: Record<string, number> = {};

    const files = await fs.promises.readdir(dir, {recursive: true});
    files.forEach((f) => {
        const e = path.extname(f);
        if (!FILE_EXTENSIONS.includes(e)) {
            return;
        }
        data[e] = (data[e] || 0) + 1;
    });

    return data;
};
